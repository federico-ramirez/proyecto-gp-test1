{"version":3,"sources":["assets/img/Programigos.png","Services/Helpers/helper.jsx","Services/Users/Users.services.jsx","Contexts/UserContext.jsx","pages/Login/Login.jsx","Services/Admin/Admin.services.jsx","Components/CardPost/CardPosts.jsx","Components/Post/Posts.jsx","Components/Pagination/Pagination.jsx","pages/Admin/Admin.jsx","pages/Redirect/RedirectUser.jsx","Components/Comment/Comment.jsx","Components/Card/Card.jsx","Components/Feed/Feed.jsx","pages/UserFeed/UserFeed.jsx","pages/NotFound/NotFound.jsx","pages/Post/Post.jsx","Components/PrivateRoute/PrivateRoute.jsx","Components/FavoritesCard/FavoritesCard.jsx","Components/FavoritePosts/FavoritePost.jsx","pages/Favorites/Favorites.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","getToken","localStorage","getItem","fetchAllPosts","a","limit","page","query","axios","get","headers","params","response","data","postResponse","items","isNextPageAvailable","pages","updatePost","id","title","description","image","formData","URLSearchParams","append","put","createPost","post","stateVisibilityPost","patch","fetchFeedPosts","fetchAllFavoritePosts","favorites","getOnePost","handleLike","handleFavorite","createComment","comment","services","login","username","password","JSON","stringify","status","verifyToken","token","allPostServices","getAllPosts","filters","result","success","console","error","getFavorites","UserContext","React","createContext","TOKEN_KEY","UserProvider","props","useState","undefined","setToken","user","setUser","useEffect","verifyTokenAsync","lsToken","userService","role","setTokenAll","setItem","useCallback","loginAsync","tokenRes","logout","value","useMemo","Provider","useUserContext","context","useContext","Error","Login","setUsername","setPassword","setError","onChange","e","save","target","preventDefault","logged","replace","to","className","src","logo","alt","onSubmit","type","placeholder","postServices","getPosts","getPost","sendComment","Card","onClick","visibility","_id","active","style","backgroundColor","color","Posts","posts","navigate","changeVisibility","map","Pagination","next","prev","Admin","useNavigate","setPosts","setPage","setIsNextPageAvailable","recharge","setRecharge","setQuery","fetchPosts","changeAllPosts","rolePages","RedirectUser","Comment","like","handleComment","setComment","userNumber","isLikedByUser","likes","find","isFavoriteByUser","item","moment","require","locale","createdAtJSON","createdAt","createdAtDate","Date","parse","toString","format","updatedAtJSON","updatedAt","updatedAtDate","length","disabled","comments","index","name","Feed","UserFeed","setFavorites","NotFound","Post","useParams","setTitle","setDescription","setImage","completed","setComplete","create","update","log","xmlns","viewBox","d","class","PrivateRoute","children","FavoritesCard","FavoritePost","Favorites","fetchFavoritePosts","oldPosts","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efbf1bd2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Programigos.6f23a76a.png\";","import axios from \"axios\";\r\nexport const BASE_URL = \"https://posts-pw2021.herokuapp.com/api/v1/\";\r\n\r\nconst getToken = () => localStorage.getItem('token');\r\n\r\nexport const fetchAllPosts = async ({ limit, page, query }) => {\r\n    const response = await axios.get(`${BASE_URL}post/${query}`, \r\n    {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${getToken()}`\r\n        },\r\n        params: {\r\n            limit: limit, \r\n            page: page\r\n        }\r\n    });\r\n    const postResponse = await response.data;\r\n    \r\n    return { items: postResponse.data, isNextPageAvailable: page + 1 < postResponse.pages }\r\n};\r\n\r\nexport const updatePost = async ({ id, title, description, image }) => {\r\n    const formData = new URLSearchParams();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"image\", image);\r\n\r\n    const response = await axios.put(`${BASE_URL}post/update/${id}`,formData,\r\n    {\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            \"Authorization\": `Bearer ${getToken()}`\r\n            \r\n        } \r\n    });\r\n\r\n    return response.data;\r\n}\r\n\r\nexport const createPost = async ({ title, description, image }) => {\r\n    const formData = new URLSearchParams();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"image\", image);\r\n\r\n    const response = await axios.post(`${BASE_URL}post/create`, formData,\r\n    {\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            \"Authorization\": `Bearer ${getToken()}`\r\n            \r\n        } \r\n    });\r\n\r\n    return response.data;\r\n}\r\n\r\nexport const stateVisibilityPost = async ( id ) => {\r\n    const response = await axios.patch(`${BASE_URL}post/toggle/${id}`, null, \r\n    {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${getToken()}`\r\n        } \r\n    });\r\n\r\n    return response.data;\r\n}\r\n\r\n\r\nexport const fetchFeedPosts = async ({ limit, page }) => {\r\n    const response = await axios.get(`${BASE_URL}post/all`,\r\n        {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${getToken()}`\r\n            },\r\n            params: {\r\n                limit: limit,\r\n                page: page\r\n            }\r\n        });\r\n    const postResponse = await response.data;\r\n\r\n    return { items: postResponse.data, isNextPageAvailable: page < postResponse.pages }\r\n};\r\n\r\nexport const fetchAllFavoritePosts = async () => {\r\n    const response = await axios.get(`${BASE_URL}post/fav`,\r\n        {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${getToken()}`\r\n            }\r\n        });\r\n    const postResponse = await response.data;\r\n\r\n    return { items: postResponse.favorites }\r\n};\r\n\r\nexport const getOnePost = async ({ id }) => {\r\n    const response = await axios.get(`${BASE_URL}post/one/${id}`,\r\n        {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${getToken()}`\r\n            }\r\n        })\r\n    return response.data\r\n};\r\n\r\nexport const transformPostData = (postRaw) => {\r\n    if (!postRaw) return null\r\n\r\n    return {\r\n        user: postRaw.user.username,\r\n        title: postRaw.title,\r\n        description: postRaw.description,\r\n        comments: postRaw.comments.map((comment) => comment.comments.description),\r\n        userComments: postRaw.comments.map((user) => user.comments.user.username),\r\n        createdDate: postRaw.createdAt,\r\n        updatedDate: postRaw.updatedAt,\r\n        likes: postRaw.likes.map().count()\r\n    }\r\n};\r\n\r\nexport const handleLike = async (id) => {\r\n    const response = await axios.patch(`${BASE_URL}post/like/${id}`, null, \r\n    {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${getToken()}`\r\n        } \r\n    });\r\n\r\n    return response.data;\r\n}\r\n\r\nexport const handleFavorite = async (id) => {\r\n    const response = await axios.patch(`${BASE_URL}post/fav/${id}`, null, \r\n    {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${getToken()}`\r\n        } \r\n    });\r\n\r\n    return response.data;\r\n}\r\n\r\nexport const createComment = async (id, comment) => {\r\n    const formData = new URLSearchParams();\r\n    formData.append(\"description\", comment);\r\n    const response = await axios.patch(`${BASE_URL}post/comment/${id}`, formData, \r\n    {\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            \"Authorization\": `Bearer ${getToken()}`\r\n        } \r\n    });\r\n\r\n    return response.data;\r\n}","import axios from \"axios\";\r\nimport { BASE_URL, fetchFeedPosts, fetchAllFavoritePosts, getOnePost } from \"../Helpers/helper\";\r\n\r\nconst services = {};\r\n\r\nservices.login = async (username, password) => {\r\n    const response = await axios.post(`${BASE_URL}auth/signin`,\r\n        JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        }), {\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    });\r\n\r\n    if (response.status === 200) {\r\n        const data = await response.data;\r\n        return data;\r\n    }\r\n\r\n    return {};\r\n};\r\n\r\nservices.verifyToken = async (token) => {\r\n    const response = await axios.get(`${BASE_URL}auth/whoami`, {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    if (response.status === 200) {\r\n        const data = await response.data;\r\n        return data;\r\n    }\r\n\r\n    return {};\r\n};\r\n\r\nexport const allPostServices = {\r\n    getAllPosts: async (filters = {}) => {\r\n        const { limit = 10, page = 0 } = filters\r\n        try {\r\n            const result = await fetchFeedPosts({ limit, page })\r\n            return { items: result.items, isNextPageAvailable: result.isNextPageAvailable, success: true }\r\n        } catch (error) {\r\n            console.error({ error })\r\n            return { items: [], isNextPageAvailable: false, success: false }\r\n        }\r\n    },\r\n\r\n    getFavorites: async () => {\r\n        try {\r\n            const result = await fetchAllFavoritePosts()\r\n            return { items: result.items, success: true }\r\n        } catch (error) {\r\n            console.error({ error })\r\n            return { items: [], success: false }\r\n        }\r\n    }\r\n}\r\n\r\nexport const favoritesServices = {\r\n    getFavorites: async () => {\r\n        try {\r\n            const result = await fetchAllFavoritePosts()\r\n            return { items: result.items }\r\n        } catch (error) {\r\n            console.error({ error })\r\n            return { items: [], success: false }\r\n        }\r\n    }\r\n}\r\n\r\nexport const getOnePostService = {\r\n    getOnePost: async () => {\r\n        try {\r\n            const result = await getOnePost()\r\n            return { items: result.items }\r\n        } catch (error) {\r\n            console.error({ error })\r\n            return { items: [], success: false }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default services;","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport userService from '../Services/Users/Users.services';\r\n\r\nconst UserContext = React.createContext();\r\nconst TOKEN_KEY = \"token\";\r\nconst USERNAME_KEY = \"username\";\r\n\r\nexport const UserProvider = (props) => {\r\n    const [token, setToken] = useState(undefined);\r\n    const [user, setUser] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const verifyTokenAsync = async () => {\r\n            const lsToken = getToken();\r\n\r\n            if(lsToken) {\r\n                const { username, role } = await userService.verifyToken(lsToken);\r\n                if(username && role) {\r\n                    setUser({ username, role });\r\n                    setTokenAll(lsToken);\r\n                    localStorage.setItem(USERNAME_KEY, username);\r\n                }\r\n            }\r\n        }\r\n\r\n        verifyTokenAsync();\r\n    }, [token])\r\n\r\n    const setTokenAll = (token) => {\r\n        localStorage.setItem(TOKEN_KEY, token);\r\n        setToken(token);\r\n    }\r\n\r\n    const login = useCallback((username, password)=> {\r\n        const loginAsync = async () => {\r\n            let status = false;\r\n            try {\r\n                const { token: tokenRes } = await userService.login(username, password);\r\n                if(tokenRes) {\r\n                    setTokenAll(tokenRes);\r\n                    status = true;\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(\"Error in login\");\r\n            } finally {\r\n                return status;\r\n            }\r\n        };\r\n\r\n        return loginAsync();\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        setUser(undefined);\r\n        setTokenAll(undefined);\r\n    }, [])\r\n\r\n    const value = useMemo(()=> ({\r\n        token: token,\r\n        user: user,\r\n        login: login,\r\n        logout: logout\r\n    }), [token, user, login, logout]);\r\n\r\n    return <UserContext.Provider value={value} {...props} />;\r\n}\r\n\r\nexport const useUserContext = () => {\r\n    const context = React.useContext(UserContext);\r\n\r\n    if (!context) {\r\n        throw new Error(\"useUserContext() must be inside of UserProvider\");\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nconst getToken = () => localStorage.getItem(TOKEN_KEY);","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Navigate } from 'react-router-dom'\r\nimport logo from '../../assets/img/Programigos.png'\r\n\r\nimport { useUserContext } from '../../Contexts/UserContext';\r\n\r\nconst Login = () => {\r\n    const { login, token } = useUserContext();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const onChange = (e, save) => {\r\n        save(e.target.value);\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        const logged = await login(username, password);\r\n        setError(!logged);\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n\r\n    }\r\n    \r\n    if (token) {\r\n        return <Navigate replace to=\"/redirect\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-screen bg-green-400 flex flex-col space-y-10 justify-center w-full items-center\">\r\n            <div className=\"bg-white shadow-2xl rounded w-auto h-10/12 min-h-1/2 m-4 p-5 content-around\">\r\n                <img src={logo} alt=\"<Programigos />\" className=\"w-48 m-auto\" />\r\n                <form className=\"space-y-5 mt-5\" onSubmit={onSubmit}>\r\n                    {error && <p className=\"w-full rounded p-2 text-center font-semibold text-red-700 font-roboto bg-white border-solid border-2 border-red-700 select-none\">\r\n                        ¡Es necesario llenar todos los campos!\r\n                    </p>}\r\n                    <input className=\"w-full h-12 border border-green-700 rounded px-3 text-green-700\"\r\n                        type=\"text\"  \r\n                        placeholder=\"Usuario\" \r\n                        onChange={(e) => onChange(e, setUsername)}\r\n                        value={username}\r\n                    />\r\n                    <input className=\"w-full h-12 border border-green-700 rounded text-green-700 px-3\" \r\n                        type=\"password\"  \r\n                        placeholder=\"Contraseña\"\r\n                        onChange={(e) => onChange(e, setPassword)}\r\n                        value={password} \r\n                    />\r\n                    <button className=\"text-center w-full bg-green-700 rounded px-3 text-white py-3 font-medium hover:bg-indigo-50 hover:text-green-800\" type=\"submit\">Iniciar sesión</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import { \r\n  fetchAllPosts, getOnePost, updatePost, createPost, \r\n  stateVisibilityPost, handleLike, createComment, handleFavorite\r\n} from \"../Helpers/helper\";\r\n\r\nexport const postServices = {\r\n    getPosts: async (filters = {}) => {\r\n      const { limit = 15, page = 0, query } = filters\r\n      try {\r\n        const result = await fetchAllPosts({ limit, page, query});\r\n        return { items: result.items, isNextPageAvailable: result.isNextPageAvailable, success: true };\r\n  \r\n      } catch (error) {\r\n        console.error({ error });\r\n        return { items: [], isNextPageAvailable: false, success: false };\r\n      }\r\n    },\r\n\r\n    getPost: async ( id ) => {\r\n      try {\r\n        const result = await getOnePost({ id });\r\n        return { data: result, success: true };\r\n  \r\n      } catch (error) {\r\n        console.error({ error });\r\n        return { data: '', success: false };\r\n      }\r\n    },\r\n\r\n    updatePost: async ( id, title, description, image ) => {\r\n      try {\r\n        const result = await updatePost({ id, title, description, image });\r\n        return { data: result, success: true };\r\n  \r\n      } catch (error) {\r\n        console.error({ error });\r\n        return { data: '', success: false };\r\n      }\r\n    },\r\n\r\n    createPost: async ( title, description, image ) => {\r\n      try {\r\n        const result = await createPost({ title, description, image });\r\n        return { data: result, success: true };\r\n  \r\n      } catch (error) {\r\n        console.error({ error });\r\n        return { data: '', success: false };\r\n      }\r\n    },\r\n\r\n    stateVisibilityPost: async ( id ) => {\r\n      try {\r\n        const result = await stateVisibilityPost(id);\r\n        return { data: result, success: true };\r\n  \r\n      } catch (error) {\r\n        console.error({ error });\r\n        return { data: '', success: false };\r\n      }\r\n    },\r\n\r\n    handleLike: async (id) => {\r\n      try {\r\n        const result = await handleLike(id);\r\n        return { data: result, success: true };\r\n  \r\n      } catch (error) {\r\n        console.error({ error });\r\n        return { data: '', success: false };\r\n      }\r\n    },\r\n\r\n    handleFavorite: async (id) => {\r\n      try {\r\n        const result = await handleFavorite(id);\r\n        return { data: result, success: true };\r\n  \r\n      } catch (error) {\r\n        console.error({ error });\r\n        return { data: '', success: false };\r\n      }\r\n    },\r\n\r\n    sendComment: async (id, comment) => {\r\n      try {\r\n        const result = await createComment(id, comment);\r\n        return { data: result, success: true };\r\n  \r\n      } catch (error) {\r\n        console.error({ error });\r\n        return { data: '', success: false };\r\n      }\r\n    }\r\n};","const getUsername = () => localStorage.getItem(\"username\");\r\n\r\nconst Card = ({ post, onClick, visibility }) => {\r\n    // validar nulo \r\n    const src = post?.image;\r\n\r\n    return (\r\n        <div className=\"xl:w-1/5 xl:h-96 bg-white rounded shadow-lg relative\">\r\n            <div onClick={() => onClick(post._id, post.active, post.user.username)}>\r\n\r\n                <div className=\"xl:ml-10 w-72 h-40 rounded-t flex justify-center items-center\" style={{backgroundColor: \"#F6F6F6\"}}>\r\n                    <img src={src} className=\"p-1 w-40 h-40\" alt={`post ${post.title}`}/>\r\n                </div>\r\n                <div className=\"px-4\">\r\n                    <label className=\"block text-gray-700 text-xl font-bold mb-2\">\r\n                        Estado: {post.active ? `Activo` : `Inactivo`}\r\n                    </label>\r\n                    <div className=\"flex justify-between items-center py-1.5\">\r\n                        <h2 className=\"font-roboto text-2xl capitalize\" style={{color: \"#454545\"}}>{post.title}</h2>\r\n                        <p className=\"font-roboto text-xl\" style={{color: \"#6D6D6D\"}}>Nº {post.id}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            { post.user.username === getUsername() && <button className=\"xl:ml-20 mt-10 transition rounded border border-green-500 duration-300 ease-in-out text-extrabold uppercase bg-green-500 hover:bg-green-700 py-2 px-4 text-gray-100\" onClick={() => visibility(post._id)}>\r\n                Cambiar Visibilidad\r\n            </button> }\r\n        </div>\r\n    );  \r\n};\r\n\r\nexport default Card;","import Card from \"../CardPost/CardPosts\";\r\n\r\nconst Posts = ({ posts=[], navigate, changeVisibility }) => { \r\n  return (\r\n    <div className=\" w-full flex justify-center items-center gap-8 flex-wrap\">\r\n      {\r\n        posts.map( post => {\r\n          return <Card\r\n            key={post._id}\r\n            post={post}\r\n            onClick={navigate}\r\n            visibility={changeVisibility}\r\n            />\r\n        })\r\n      }\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default Posts;","import { FaArrowLeft, FaArrowRight } from 'react-icons/fa'\r\n\r\nconst Pagination = ({ next, prev }) => { \r\n    return (\r\n      <div className=\"flex justify-center items-center gap-4 flex-wrap mb-5\">\r\n          <button className=\"inline-flex items-center bg-transparent hover:bg-green-700 text-green-500 font-light py-2 px-6 transition duration-300 ease-in-out border-none hover:text-white rounded start\" onClick={prev}>\r\n              <FaArrowLeft/> <span className=\"mx-2\">Anterior</span>\r\n          </button>\r\n          <button className=\"inline-flex items-center bg-transparent hover:bg-green-700 text-green-500 font-light py-2 px-6 transition duration-300 ease-in-out border-none hover:text-white rounded start\" onClick={next}>\r\n              <span className=\"mx-2\">Siguiente</span> <FaArrowRight />\r\n          </button>\r\n      </div>  \r\n    );\r\n  }\r\n  \r\n  export default Pagination;","import { useState, useEffect } from \"react\";\r\nimport { useUserContext } from '../../Contexts/UserContext'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { postServices } from '../../Services/Admin/Admin.services'\r\nimport Post from '../../Components/Post/Posts';\r\nimport Pagination from '../../Components/Pagination/Pagination';\r\n\r\nconst getUsername = () => localStorage.getItem(\"username\");\r\n\r\nexport default function Admin() {\r\n\r\n    const navigate = useNavigate();\r\n    const { logout } = useUserContext();\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [isNextPageAvailable, setIsNextPageAvailable] = useState(true);\r\n    const [recharge, setRecharge] = useState(false);\r\n    const [query, setQuery] = useState('owned');\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n\r\n                const filters = { limit: 8, page: page, query: query };\r\n                const response = await postServices.getPosts(filters);\r\n\r\n                setIsNextPageAvailable(response.isNextPageAvailable);\r\n                if(!response.success){\r\n                throw new Error('Something was wrong')\r\n                }\r\n                setPosts(response.items);\r\n                setRecharge(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchPosts();\r\n    }, [page, recharge, query]);\r\n\r\n    const logoutHandler = () => {\r\n        logout()\r\n        navigate(\"/login\")\r\n    }\r\n\r\n    async function changeVisibility(id) {\r\n      try {\r\n          const response = await postServices.stateVisibilityPost(id);\r\n          if(!response.success){\r\n              throw new Error('Something was wrong')\r\n          }\r\n          setRecharge(true);\r\n      } catch (error) {\r\n          console.error(error);\r\n      }\r\n  }\r\n\r\n  const changeAllPosts = (type) => {\r\n      setQuery(type)\r\n      setPage(0)\r\n  }\r\n\r\n    const createPost = () => {\r\n      navigate(\"/post\")\r\n    }\r\n\r\n    const navigateToPost = (id, active, username) => {\r\n      if(active && username === getUsername()) navigate('/post/' + id)\r\n    }\r\n\r\n    const next = () => {\r\n      if(isNextPageAvailable){\r\n        setPage(page + 1);\r\n      }\r\n    }\r\n    \r\n    const prev = () => {\r\n      if (page > 0){ \r\n        setPage(page - 1);\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full min-h-fullscreen flex flex-col bg-black\">\r\n        <nav className=\"pt-7 w-full h-16 text-3xl bg-black sticky top-0 left-0 flex justify-center items-center text-white font-oswald z-10\"> \r\n            Users Posts\r\n        </nav>\r\n        \r\n        <main className=\" p-8 flex flex-col justify-center gap-8\">\r\n          \r\n        <div className=\" flex justify-center items-center bg-black text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">          \r\n          <button onClick={logoutHandler} className=\"xl:mr-4 border-b-4 transition rounded border border-blue-500 duration-300 ease-in-out text-lg text-extrabold uppercase bg-blue-700 hover:bg-blue-900 py-2 px-4 text-gray-100\">\r\n              Log out\r\n          </button>\r\n          <button onClick={createPost} className=\"xl:mr-4 border-b-4 transition rounded border border-blue-500 duration-300 ease-in-out text-lg text-extrabold uppercase bg-blue-700 hover:bg-blue-900 py-2 px-4 text-gray-100\">\r\n              Create Post\r\n          </button>\r\n          <button onClick={()=> changeAllPosts('owned')} className=\"xl:mr-4 border-b-4 transition rounded border border-blue-500 duration-300 ease-in-out text-lg text-extrabold uppercase bg-blue-700 hover:bg-blue-900 py-2 px-4 text-gray-100\">\r\n              Admin Posts\r\n          </button>\r\n          <button onClick={()=> changeAllPosts('all')} className=\"xl:mr-4 border-b-4 transition rounded border border-blue-500 duration-300 ease-in-out text-lg text-extrabold uppercase bg-blue-700 hover:bg-blue-900 py-2 px-4 text-gray-100\">\r\n              All Posts\r\n          </button>  \r\n                       \r\n        </div>\r\n        <Pagination next={next} prev={prev}/> \r\n        <Post posts={posts} navigate={navigateToPost} changeVisibility={changeVisibility} />\r\n        \r\n        </main>      \r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\n","import { useUserContext } from '../../Contexts/UserContext';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst rolePages = {\r\n  \"admin\": \"/admin\",\r\n  \"user\": \"/user\"\r\n}\r\n\r\nconst RedirectUser = () => {\r\n  const { user } = useUserContext();\r\n\r\n  if(!user) return <p> No se puede redireccionar </p>;\r\n\r\n  return <Navigate replace to={rolePages[user.role] ?? \"/\"} />\r\n}\r\n\r\nexport default RedirectUser;","const Comment = ({username, description}) => {\r\n    return (\r\n        <div className=\"w-full max-w-96 h-auto bg-gray-100 rounded-md p-2 mb-2\">\r\n            <div className=\"max-w-screen-md\">\r\n                <p className=\"text-gray-500 font-semibold text-sm 2xl:text-4xl overflow-x-hidden\"> {username} </p> <p className=\"text-sm 2xl:text-4xl\">{description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment","import { FaRegHeart, FaRegBookmark, FaRegComment, FaHeart, FaBookmark } from \"react-icons/fa\";\r\nimport Comment from \"../Comment/Comment\";\r\nimport { useState } from 'react';\r\nimport '../../App.css'\r\n\r\nconst getUsername = () => localStorage.getItem(\"username\");\r\n\r\nconst Card = ({ post, like, favorites, handleComment, handleFavorite }) => {\r\n    const src = post?.image;\r\n    const [comment, setComment] = useState('');\r\n\r\n    const user = JSON.stringify(post.user.username)\r\n    let userNumber = \"\"\r\n\r\n    if (user[4] === \"_\") {\r\n        userNumber = 0+user[3]\r\n    } else {\r\n        userNumber = user[3]+user[4]\r\n    }\r\n    \r\n    const onChange = (e, save) => {\r\n        save(e.target.value);\r\n    }\r\n\r\n    const sendComment = () => {\r\n        handleComment(post._id, comment);\r\n        setComment('');\r\n    }\r\n\r\n    const isLikedByUser = () => post.likes.find(like => like.username === getUsername()) != null;\r\n\r\n    const isFavoriteByUser = (id) => favorites.find(item => item === id) != null;\r\n\r\n    var moment = require('moment')\r\n    moment().locale()\r\n\r\n    let createdAtJSON = post.createdAt;\r\n    let createdJSONDate = Date.parse(createdAtJSON.toString())\r\n    let createdAtDate = moment(createdJSONDate).format('DD/MM/YYYY, hh:mm a')\r\n\r\n    let updatedAtJSON = post.updatedAt\r\n    let updatedJSONDate = Date.parse(updatedAtJSON.toString())\r\n    let updatedAtDate = moment(updatedJSONDate).format('DD/MM/YYYY, hh:mm a')\r\n\r\n\r\n    return (\r\n        <div className=\"w-auto max-w-full mb-5 h-3/4 max-h-3/4 bg-white rounded-md p-3 shadow-2xl overflow-x-hidden\">\r\n            <div className=\"w-full inline-flex items-center border-b-2\">\r\n                <div className=\"p-2 items-center bg-green-500 text-white max-w-max shadow-sm rounded-full w-8 h-8 text-center\" >\r\n                    <div className=\"w-full h-full flex items-center text-center font-semibold\">\r\n                        <p className=\"text-white text-sm w-full\">{userNumber}</p>\r\n                    </div>\r\n                </div>\r\n                <h3 className=\"font-semibold p-4 2xl:text-5xl\">{post.user.username} </h3>\r\n            </div>\r\n            <img src={src} alt={post.title} className=\"W-96 max-w-96 h-40 sm:h-96 md:h-screen border-b-2 post-image\" />\r\n            <br></br>\r\n            <div className=\"w-full flex flex-row\">\r\n                <div className=\"inline-flex items-center mr-4\">\r\n                    <button onClick={() => like(post._id)} className={`p-3 flex items-center bg-white  max-w-max shadow-sm hover:bg-green-200 hover:shadow-lg rounded-full w-10 h-10  `}>\r\n                        <svg className={`w-full h-full flex items-center ${isLikedByUser() && `text-red-600`}`}>\r\n                            {isLikedByUser() ? <FaHeart /> : <FaRegHeart className=\"text-gray-700\" />}\r\n                        </svg>\r\n                    </button >\r\n                    <p className=\"text-red-600 font-semibold ml-2\">\r\n                        {post.likes.length}\r\n                    </p>\r\n                </div>\r\n                <div className=\"inline-flex items-center mr-4\">\r\n                    <div className=\"p-3 flex items-center bg-white text-blue-900 max-w-max shadow-sm rounded-full w-10 h-10\" disabled>\r\n                        <svg className=\"w-full h-full flex items-center\"><FaRegComment /></svg>\r\n                    </div>\r\n                    <p className=\"text-blue-900 font-semibold\"> {post.comments.length} </p>\r\n                </div>\r\n                <div className=\"inline-flex items-center mr-4\">\r\n                    <button className=\"p-3 flex items-center bg-white text-yellow-400 max-w-max shadow-sm hover:bg-green-200 hover:shadow-lg rounded-full w-10 h-10 \" onClick={() => handleFavorite(post._id)}>\r\n                        <svg className={`w-full h-full flex items-center ${isFavoriteByUser(post._id) && `text-yellow-400`}`}>\r\n                            {isFavoriteByUser(post._id) ? <FaBookmark /> : <FaRegBookmark />}\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-4/5 max-w-1/3\">\r\n                <h4 className=\"text-sm md:text-base 2xl:text-5xl font-semibold overflow-x-hidden\">{post.title}</h4>\r\n                <p className=\"w-60 max-w-full text-sm md:text-base 2xl:text-5xl overflow-x-hidden\">{post.description} </p>\r\n                <p className=\"text-gray-500 text-xs 2xl:text-3xl\">Publicado el {createdAtDate}</p>\r\n                <p className=\"text-gray-500 text-xs 2xl:text-3xl\">Actualizado el {updatedAtDate}</p>\r\n            </div>\r\n            <hr className=\"mb-2\" />\r\n            {\r\n                post.comments.map(function (item, index) {\r\n                    return <Comment key={index} username={item.user.username} description={item.description} />\r\n                })\r\n            }\r\n            <div className=\"w-full inline-flex\">\r\n                <input type=\"text\" name=\"comment\" id=\"comment\"\r\n                    placeholder=\"Escribe un comentario\"\r\n                    className=\"w-11/12 border border-gray-700 rounded-md mr-1\"\r\n                    onChange={(e) => onChange(e, setComment)}\r\n                    value={comment} />\r\n\r\n                <button className=\"p-3 flex items-center bg-white text-blue-900 max-w-max shadow-sm hover:bg-green-200 hover:shadow-lg rounded-full w-10 h-10 \"\r\n                    onClick={sendComment}>\r\n                    <svg className=\"w-full h-full flex items-center\"><FaRegComment /></svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import Card from \"../Card/Card\"\r\n\r\nconst Feed = ({ posts=[], handleLike, handleComment, handleFavorite, favorites }) => {\r\n    return (\r\n        <div className=\"mt-16 flex flex-col bg-gray-300 bg-opacity-10 w-full md:w-3/5 md:min-w-3/5 2xl:w-2/3 h-full md:mx-auto\">\r\n            {\r\n                posts.map(post => {\r\n                    return <Card \r\n                    key={post._id}\r\n                     post={post} \r\n                     like={handleLike}\r\n                     handleComment={handleComment} \r\n                     handleFavorite={handleFavorite}\r\n                     favorites={favorites}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed","import React, { useState, useEffect } from \"react\";\r\nimport Feed from \"../../Components/Feed/Feed\";\r\nimport Pagination from \"../../Components/Pagination/Pagination\"\r\nimport { FaSignOutAlt, FaBookmark } from \"react-icons/fa\";\r\nimport { useUserContext } from '../../Contexts/UserContext'\r\nimport { allPostServices } from \"../../Services/Users/Users.services\";\r\nimport { postServices } from \"../../Services/Admin/Admin.services\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport logo from '../../assets/img/Programigos.png'\r\n\r\nconst UserFeed = () => {\r\n    const navigate = useNavigate()\r\n    const { logout } = useUserContext()\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [isNextPageAvailable, setIsNextPageAvailable] = useState(true);\r\n    const [recharge, setRecharge] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchFeedPosts = async () => {\r\n            try {\r\n                const filters = { limit: 10, page: page };\r\n                const response = await allPostServices.getAllPosts(filters)\r\n                const favorites = await allPostServices.getFavorites()\r\n\r\n\r\n                setIsNextPageAvailable(response.isNextPageAvailable);\r\n                if (!response.success) {\r\n                    throw new Error('Something was wrong')\r\n                }\r\n                setRecharge(false)\r\n                setPosts(response.items)\r\n                setFavorites(favorites.items)\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchFeedPosts();\r\n    }, [page, recharge]);\r\n\r\n    const next = () => {\r\n        if (isNextPageAvailable) {\r\n            setPage(page + 1);\r\n        }\r\n    }\r\n\r\n    const prev = () => {\r\n        if (page > 0) {\r\n            setPage(page - 1);\r\n        }\r\n    }\r\n\r\n    const handleLike = async (id) => {\r\n        try {\r\n            const response = await postServices.handleLike(id)\r\n\r\n            if (!response.success) {\r\n                throw new Error('Something was wrong')\r\n            }\r\n            setRecharge(true)\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const handleFavorite = async (id) => {\r\n        try {\r\n            const response = await postServices.handleFavorite(id)\r\n\r\n            if (!response.success) {\r\n                throw new Error('Something was wrong')\r\n            }\r\n            setRecharge(true)\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const handleComment = async (id, comment) => {\r\n        try {\r\n            const response = await postServices.sendComment(id, comment);\r\n\r\n            if (!response.success) {\r\n                throw new Error('Something was wrong')\r\n            }\r\n            setRecharge(true)\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        logout()\r\n        navigate(\"/login\")\r\n    }\r\n\r\n    const favoritePageHandler = () => {\r\n        navigate(\"/favorites\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full flex justify-center items-center min-h-screen bg-green-100 overflow-x-hidden\">\r\n            <main className=\"w-max h-full\">\r\n                <div className=\"w-full h-12 min-h-12 bg-white text-center justify-center p-1 fixed left-0 right-0 flex flex-row shadow-2xl\">\r\n                    <div className=\"w-9/12 md:w-10/12 sm:w-9/12 inline-flex text-center items-center\">\r\n                        <img src={logo} alt=\"<Programigos />\" className=\"w-44 h-10\" />\r\n                    </div>\r\n                    <div className=\"w-3/12 md:w-2/12 inline-flex items-center\">\r\n                        <button onClick={favoritePageHandler} className=\"p-3 flex items-center text-green-500 max-w-max shadow-sm hover:bg-green-300 hover:shadow-lg rounded-full w-10 h-10\">\r\n                            <svg className=\"w-full h-full flex items-center\"><FaBookmark /></svg>\r\n                        </button>\r\n                        <button onClick={logoutHandler} className=\"p-3 flex items-center text-green-500 max-w-max shadow-sm hover:bg-green-300 hover:shadow-lg rounded-full w-10 h-10\">\r\n                            <svg className=\"w-full h-full flex items-center\"><FaSignOutAlt /></svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <Feed\r\n                    posts={posts}\r\n                    handleLike={handleLike}\r\n                    handleComment={handleComment}\r\n                    handleFavorite={handleFavorite}\r\n                    favorites={favorites} />\r\n                <Pagination next={next} prev={prev} />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserFeed","import { ImCross } from \"react-icons/all\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const onClick = (e) => {\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center w-screen h-screen bg-gray-100\">\r\n      <ImCross className=\"text-8xl m-4 text-red-600\" />\r\n      <h1 className=\"text-6xl font-roboto text-center mb-6 text-red-600\">404</h1>\r\n      <h2 className=\"text-3xl font-roboto text-center text-red-600\">Página no encontrada</h2>\r\n      <p className=\"text-xl font-roboto text-center text-red-600\">\r\n        Algo salió mal. La página que buscas no existe.\r\n      </p>\r\n      <button\r\n        className=\"font-roboto bg-gray-300 m-4 py-2 px-4 rounded\"\r\n        onClick={(e) => onClick(e)}\r\n      >\r\n        Ir al inicio de sesión\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { postServices} from '../../Services/Admin/Admin.services';\r\nimport { useParams } from 'react-router';\r\n\r\nexport default function Post() {\r\n\r\n    const { id } = useParams();\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [completed, setComplete] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getPost = async () => {\r\n            try {\r\n                const response = await postServices.getPost(id);\r\n                setTitle(response.data.title);\r\n                setDescription(response.data.description);\r\n                setImage(response.data.image);\r\n                if(!response.success){\r\n                throw new Error('Something was wrong')\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        getPost();\r\n    }, [id]);\r\n\r\n    const onChange = (e, save) => {\r\n        save(e.target.value);\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        if(id == null) create(); else update();\r\n    }\r\n\r\n    async function update() {\r\n        try {\r\n            const response = await postServices.updatePost(id, title, description, image);\r\n            if(!response.success){\r\n                throw new Error('Something was wrong')\r\n            }\r\n            setComplete(true);\r\n            console.log(\"Se modifico correctamente\");\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    async function create() {\r\n        try {\r\n            const response = await postServices.createPost(title, description, image);\r\n            if(!response.success){\r\n                throw new Error('Something was wrong')\r\n            }\r\n            setComplete(true);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-screen flex flex-col space-y-10 justify-center items-center\">\r\n            <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\" onSubmit={onSubmit}>\r\n                <div className=\"mb-4\">\r\n                {id != null && <img className=\"w-full\" src={image} alt=\"Sunset in the mountains\"/> }\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                    Title\r\n                </label>\r\n                <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \r\n                    type=\"text\" \r\n                    placeholder=\"\"\r\n                    onChange={(e) => onChange(e, setTitle)}\r\n                    value={title}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                    Description\r\n                </label>\r\n                <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" \r\n                    type=\"text\" \r\n                    placeholder=\"\"\r\n                    onChange={(e) => onChange(e, setDescription)}\r\n                    value={description}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                    Image\r\n                </label>\r\n                <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" \r\n                    type=\"text\" \r\n                    placeholder=\"\"\r\n                    onChange={(e) => onChange(e, setImage)}\r\n                    value={image}\r\n                    />\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\r\n                    { id == null ? `Create` : `Update` }\r\n                </button>\r\n                </div>\r\n                {completed && \r\n                <div className=\"bg-teal-100 border-t-4 border-teal-500 rounded-b text-teal-900 px-4 py-3 shadow-md\" role=\"alert\">\r\n                <div className=\"flex\">\r\n                  <div className=\"py-1\"><svg className=\"fill-current h-6 w-6 text-teal-500 mr-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\"/></svg></div>\r\n                  <div>\r\n                    <p class=\"font-bold\">\r\n                        { id == null ? `Agregado correctamente` : `Modificado correctamente` }\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            }\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { useUserContext } from './../../Contexts/UserContext';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({role=\"user\", children }) => {\r\n  const { token, user } = useUserContext();\r\n  \r\n  if(!token) return <Navigate replace to=\"/login\"/>;\r\n  if(!user || user.role !== role) return <Navigate replace to=\"/404\"/>;\r\n\r\n  return children;\r\n}\r\n\r\nexport default PrivateRoute;","\r\nimport { FaRegHeart, FaRegComment, FaRegBookmark, FaHeart } from \"react-icons/fa\";\r\n\r\nconst getUsername = () => localStorage.getItem(\"username\");\r\n\r\nconst FavoritesCard = ({ post, like }) => {\r\n    const src = post?.image;\r\n\r\n    var moment = require('moment')\r\n    moment().locale()\r\n\r\n    let createdAtJSON = JSON.stringify(post.createdAt);\r\n    let createdJSONDate = Date.parse(createdAtJSON)\r\n    let createdAtDate = moment(createdJSONDate).format('DD/MM/YYYY, hh:mm a')\r\n\r\n    let updatedAtJSON = JSON.stringify(post.updatedAt)\r\n    let updatedJSONDate = Date.parse(updatedAtJSON)\r\n    let updatedAtDate = moment(updatedJSONDate).format('DD/MM/YYYY, hh:mm a')\r\n\r\n    const isLikedByUser = () => post.likes.find(like => like.username === getUsername()) != null;\r\n\r\n    return (\r\n        <div className=\"w-auto max-w-full h-auto max-h-1/12 bg-white rounded-md p-3 shadow-2xl m-2\">\r\n            <h3 className=\"font-semibold p-4 2xl:text-5xl border-b-2\"> {post.user.username} </h3>\r\n            <img src={src} alt={post.title} className=\"w-full h-80 border-b-2\" />\r\n            <br></br>\r\n            <div className=\"w-max flex flex-row\">\r\n                <div className=\"inline-flex items-center mr-4\">\r\n                    <button onClick={() => like(post._id)} className={`p-3 flex items-center bg-white  max-w-max shadow-sm hover:bg-green-200 hover:shadow-lg rounded-full w-10 h-10  `}>\r\n                        <svg className={`w-full h-full flex items-center ${isLikedByUser() && `text-red-600`}`}>\r\n                            {isLikedByUser() ? <FaHeart /> : <FaRegHeart />}\r\n                        </svg>\r\n                    </button >\r\n                    <p className=\"text-red-600 font-semibold ml-2\">\r\n                        {post.likes.length}\r\n                    </p>\r\n                </div>\r\n                <div className=\"inline-flex items-center mr-4\">\r\n                    <div className=\"p-3 flex items-center bg-white text-blue-900 max-w-max shadow-sm rounded-full w-10 h-10\" disabled>\r\n                        <svg className=\"w-full h-full flex items-center\"><FaRegComment /></svg>\r\n                    </div>\r\n                    <p className=\"text-blue-900 font-semibold\"> {post.comments.length} </p>\r\n                </div>\r\n                <div className=\"inline-flex items-center mr-4\">\r\n                    <button className=\"p-3 flex items-center bg-white text-yellow-400 max-w-max shadow-sm hover:bg-gray-300 hover:shadow-lg rounded-full w-10 h-10 \">\r\n                        <svg className=\"w-full h-full flex items-center\"><FaRegBookmark /></svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <h4 className=\"text-sm md:text-base 2xl:text-5xl font-semibold\">{post.title}</h4>\r\n            <p className=\"text-sm md:text-base 2xl:text-5xl\"> {post.description} </p>\r\n            <p className=\"text-gray-500 text-xs 2xl:text-3xl\">Publicado el {createdAtDate} </p>\r\n            <p className=\"text-gray-500 text-xs 2xl:text-3xl\">Actualizado el {updatedAtDate} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritesCard","import FavoritesCard from \"../FavoritesCard/FavoritesCard\"\r\n\r\nconst FavoritePost = ({ posts=[], handleFavorite, handleLike }) => {\r\n    return (\r\n        <div className=\"mt-16 m-auto grid grid-flow-row md:grid-cols-3 auto-col-auto bg-green-100 bg-opacity-10 w-full md:w-10/12 h-full md:mx-auto\">\r\n            {\r\n                posts.map(post => {\r\n                    return <FavoritesCard \r\n                    key={post._id} \r\n                    post={post} \r\n                    like={handleLike}\r\n                    handleFavorite={handleFavorite}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritePost","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useUserContext } from '../../Contexts/UserContext'\r\nimport { FaSignOutAlt, FaHome } from \"react-icons/fa\";\r\nimport { allPostServices } from \"../../Services/Users/Users.services\";\r\nimport { postServices } from \"../../Services/Admin/Admin.services\"\r\nimport FavoritePost from \"../../Components/FavoritePosts/FavoritePost\";\r\nimport { handleFavorite, handleLike } from \"../../Services/Helpers/helper\";\r\nimport logo from '../../assets/img/Programigos.png'\r\n\r\nconst Favorites = () => {\r\n    const navigate = useNavigate()\r\n    const { logout } = useUserContext()\r\n\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchFavoritePosts = async () => {\r\n            try {\r\n                const response = await allPostServices.getFavorites()\r\n                if (!response.success) {\r\n                    throw new Error('Something was wrong')\r\n                }\r\n                await response.items.map(async post => {\r\n                    const postResponse = await postServices.getPost(post)\r\n                    setPosts(oldPosts => [...oldPosts, postResponse.data])\r\n                });\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchFavoritePosts();\r\n    },[]);\r\n\r\n    const logoutHandler = () => {\r\n        logout()\r\n        navigate(\"/login\")\r\n    }\r\n\r\n    const feedPageHandler = () => {\r\n        navigate(\"/user\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full flex justify-center items-center min-h-screen bg-green-100\">\r\n            <main className=\"w-max h-full\">\r\n                <div className=\"w-full h-12 min-h-12 bg-white text-center justify-center p-1 fixed left-0 right-0 flex flex-row shadow-2xl\">\r\n                    <div className=\"w-9/12 md:w-10/12 sm:w-9/12 inline-flex text-center items-center\">\r\n                        <img src={logo} alt=\"<Programigos />\" className=\"w-44 h-10\" />\r\n                    </div>\r\n                    <div className=\"w-3/12 md:w-2/12 inline-flex items-center\">\r\n                        <button onClick={feedPageHandler} className=\"p-3 flex items-center text-green-500 max-w-max shadow-sm hover:bg-green-300 hover:shadow-lg rounded-full w-10 h-10\">\r\n                            <svg className=\"w-full h-full flex items-center\"><FaHome /></svg>\r\n                        </button>\r\n                        <button onClick={logoutHandler} className=\"p-3 flex items-center text-green-500 max-w-max shadow-sm hover:bg-green-300 hover:shadow-lg rounded-full w-10 h-10\">\r\n                            <svg className=\"w-full h-full flex items-center\"><FaSignOutAlt /></svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <FavoritePost \r\n                    posts={posts} \r\n                    handleLike={handleLike}\r\n                    handleFavorite={handleFavorite}\r\n                />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorites","import Login from './pages/Login/Login';\r\nimport Admin from './pages/Admin/Admin';\r\nimport RedirectUser from './pages/Redirect/RedirectUser';\r\nimport UserFeed from './pages/UserFeed/UserFeed';\r\nimport NotFound from './pages/NotFound/NotFound';\r\nimport Post from './pages/Post/Post';\r\n\r\nimport Private from './Components/PrivateRoute/PrivateRoute';\r\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport Favorites from './pages/Favorites/Favorites';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>        \r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/redirect\" element={<RedirectUser />}/>\r\n        <Route path=\"/user\" element={<UserFeed />}/>\r\n        <Route path=\"/admin\"  element={<Private role=\"admin\"><Admin /></Private>} />\r\n        <Route path=\"*\" element={<NotFound />} />\r\n        <Route path=\"/post/:id\" element={<Post />} />\r\n        <Route path=\"/post\" element={<Post />} />\r\n        <Route path=\"/favorites\" element={<Favorites />} />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { UserProvider } from './Contexts/UserContext'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}